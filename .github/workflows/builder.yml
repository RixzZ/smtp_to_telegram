name: Check & Rebuild images

on:
  schedule:
    - cron: '0 * * * *'
  workflow_dispatch: {}

env:
  SOURCE_REPOSITORY: KostyaEsmukov/smtp_to_telegram

jobs:
  check:
    runs-on: ubuntu-latest
    outputs:
      up_to_date: ${{ steps.up_to_date.outputs.status }}
      new_tag: ${{ steps.github.outputs.sha1 }}
    steps:
      - name: Get SHA1 from source GitHub repository
        id: github
        run: echo "::set-output name=sha1::$(git ls-remote "https://github.com/${SOURCE_REPOSITORY}" HEAD | awk '{print $1}')"
      - name: Get most recent TAG from DockerHub (excluding 'latest')
        id: dockerhub
        run: echo "::set-output name=tag::$(curl -s "https://registry.hub.docker.com/v2/repositories/${GITHUB_REPOSITORY,,}/tags" | jq -r '.results | sort_by(.last_updated) | .[] | select(.name != "latest") | .name')"
      - name: Check if the build is up to date
        if: ${{ steps.github.outputs.sha1 == steps.dockerhub.outputs.tag }}
        id: up_to_date
        run: echo "::set-output name=status::$(echo 'true')"

  build:
    needs: check
    if: ${{ needs.check.outputs.up_to_date != 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source GitHub repository
        uses: actions/checkout@v3
        with:
          repository: ${{ env.SOURCE_REPOSITORY }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Lowercase destination GitHub repository for DockerHub
        id: string
        uses: ASzc/change-string-case-action@v4
        with:
          string: ${{ github.repository }}
      - name: Build image and push to DockerHub
        uses: docker/build-push-action@v3
        with:
          context: .
          platforms: linux/amd64,linux/arm64,linux/arm/v6,linux/arm/v7
          push: true
          tags: |
            ${{ steps.string.outputs.lowercase }}:${{ needs.check.outputs.new_tag }}
            ${{ steps.string.outputs.lowercase }}:latest

  update:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout destination GitHub repository
        uses: actions/checkout@v3
      - name: Update DockerHub information
        uses: peter-evans/dockerhub-description@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          short-description: ${{ github.event.repository.description }}
